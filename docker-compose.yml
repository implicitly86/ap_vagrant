version: '3'
networks:
  monitor-net:
    driver: bridge
volumes:
  prometheus_data: {}
  grafana_data: {}
  portainer_data: {}
services:
  portainer:
    image: portainer/portainer
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always
    expose:
      - 8000
      - 9000
    ports:
      - 8000:8000
      - 9000:9000
    networks:
      - monitor-net

  consul:
    image: consul
    container_name: consul
    restart: always
    expose:
      - 8500
    ports:
      - 8500:8500
    networks:
      - monitor-net

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
    networks:
      - monitor-net

  redis:
    image: redis
    container_name: redis
    restart: always
    expose:
      - 6379
    ports:
      - 6379:6379
    networks:
      - monitor-net

  ap_elk:
    image: ap_elk
    container_name: ap_elk
    restart: always
    expose:
      - 5601
      - 9200
      - 5044
    ports:
      - 5601:5601
      - 9200:9200
      - 5044:5044
    networks:
      - monitor-net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=168h'
      - '--web.enable-lifecycle'
    restart: always
    expose:
      - 9090
    ports:
      - 9090:9090
    networks:
      - monitor-net

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    expose:
      - 3000
    ports:
      - 3000:3000
    networks:
      - monitor-net
