version: '3'
networks:
  monitor-net:
    driver: bridge
volumes:
  prometheus_data: {}
  grafana_data: {}
  portainer_data: {}
services:
  portainer:
    image: portainer/portainer
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always
    expose:
      - 8000
      - 9000
    ports:
      - 8000:8000
      - 9000:9100
    networks:
      - monitor-net

  consul:
    image: consul
    container_name: consul
    restart: always
    expose:
      - 8500
    ports:
      - 8500:8500
    networks:
      - monitor-net

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
    networks:
      - monitor-net

  redis:
    image: redis
    container_name: redis
    restart: always
    expose:
      - 6379
    ports:
      - 6379:6379
    networks:
      - monitor-net

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    restart: always
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    expose:
      - 2181
    ports:
      - 2181:2181
    networks:
      - monitor-net

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    restart: always
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9093,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9093,EXTERNAL://192.168.33.10:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    expose:
      - 9092
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    networks:
      - monitor-net

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: always
    environment:
      - KAFKA_BROKERCONNECT=kafka:9093
    expose:
      - 9000
    ports:
      - 9000:9000
    depends_on:
      - kafka
    networks:
      - monitor-net

  ap_elk:
    image: ap_elk
    container_name: ap_elk
    restart: always
    expose:
      - 5601
      - 9200
      - 5044
    ports:
      - 5601:5601
      - 9200:9200
      - 5044:5044
    networks:
      - monitor-net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=168h'
      - '--web.enable-lifecycle'
    restart: always
    expose:
      - 9090
    ports:
      - 9090:9090
    networks:
      - monitor-net

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    expose:
      - 3000
    ports:
      - 3000:3000
    networks:
      - monitor-net
